// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Settings {
  id            Int     @id
  title         String  @default("")
  description   String  @default("")
  copyrightText String  @default("")
  robots        String  @default("noindex, nofollow, noarchive, nosnippet")
  isPrivate     Boolean @default(true)
  homePage      Page?   @relation("Settings_homePage", fields: [homePageId], references: [id])
  homePageId    String? @map("homePage")
  theme         Theme?  @relation("Settings_theme", fields: [themeId], references: [id])
  themeId       String? @map("theme")

  @@index([homePageId])
  @@index([themeId])
}

model Theme {
  id                  String     @id @default(cuid())
  name                String     @default("")
  colorPrimary        String     @default("")
  colorPrimaryDark    String     @default("")
  fontPrimary         String     @default("")
  fontSecondary       String     @default("")
  from_Settings_theme Settings[] @relation("Settings_theme")
}

model User {
  id       String  @id @default(cuid())
  name     String  @default("")
  email    String  @unique @default("")
  password String
  posts    Post[]  @relation("Post_author")
  pages    Page[]  @relation("Page_author")
  isAdmin  Boolean @default(false)
}

model Page {
  id                     String     @id @default(cuid())
  title                  String     @unique @default("")
  slug                   String     @unique @default("")
  description            String     @default("")
  publishedAt            DateTime?
  status                 String?    @default("draft")
  author                 User?      @relation("Page_author", fields: [authorId], references: [id])
  authorId               String?    @map("author")
  content                Json       @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  posts                  Post[]     @relation("Page_posts")
  from_Settings_homePage Settings[] @relation("Settings_homePage")

  @@index([authorId])
}

model Post {
  id              String      @id @default(cuid())
  title           String      @default("")
  description     String      @default("")
  publishedAt     DateTime?
  status          String?     @default("draft")
  author          User?       @relation("Post_author", fields: [authorId], references: [id])
  authorId        String?     @map("author")
  content         Json        @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  images          PostImage[] @relation("Post_images")
  from_Page_posts Page[]      @relation("Page_posts")

  @@index([authorId])
}

model PostImage {
  id          String @id @default(cuid())
  title       String @default("")
  description String @default("")
  image       Json?
  altText     String @default("")
  posts       Post[] @relation("Post_images")
}
